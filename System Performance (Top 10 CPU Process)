strComputer = "." 


const strReport = "textfilename.txt"
Const ForReading = 1
Const ForWriting = 2
Const ForAppending = 8


Set FSO = CreateObject("Scripting.FileSystemObject")


Set WriteTextFile = FSO.OpenTextFile(strReport, ForWriting, True)


Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\CIMV2") 
Set colItems = objWMIService.ExecQuery( _
    "SELECT * FROM Win32_LogicalDisk where DeviceID='c:'",,48) 

For Each objItem in colItems 

if len(objItem.VolumeName)>0 then

Wscript.Echo "-----------------------------------" & vbCrLf _
        & "VolumeName:" & vbTab & objItem.VolumeName  & vbCrLf _
        & "-----------------------------------" & vbCrLf _
        & "FreeSpace:" & vbTab _
        & FormatNumber((CDbl(objItem.FreeSpace)/1024/1024/1024))  & vbCrLf _
        & "Size:" & vbTab & vbTab _
        & FormatNumber((CDbl(objItem.Size)/1024/1024/1024))  & vbCrLf _
        & "Occupied Space:" & vbTab _
        & FormatNumber((CDbl(objItem.Size - objItem.FreeSpace)/1024/1024/1024)) 
   end if

WriteTextFile.WriteLine "--------------------------------------------------------"
WriteTextFile.WriteLine "VolumeName:" & vbtab & objItem.VolumeName & vbtab
WriteTextFile.WriteLine "--------------------------------------------------------"
WriteTextFile.WriteLine "FreeSpace:" & vbtab & FormatNumber((CDbl(objItem.FreeSpace)/1024/1024/1024)) &"GB"  
WriteTextFile.WriteLine ""
WriteTextFile.WriteLine "Size:" & vbtab &  FormatNumber((CDbl(objItem.Size)/1024/1024/1024))  &"GB"  
WriteTextFile.WriteLine ""
WriteTextFile.WriteLine "Occupied Space:" & vbtab & FormatNumber((CDbl(objItem.Size - objItem.FreeSpace)/1024/1024/1024)) &"GB"   & vbtab 
WriteTextFile.WriteLine ""


Next


Dim objWMIService, perfData, entry , colComputer, objComputer
Dim strLogonUser, strComputer 

strComputer = "." 

Set objWMIService = GetObject("winmgmts:" _
& "{impersonationLevel=impersonate}!\\" _ 
& strComputer & "\root\cimv2") 
Set perfData = objWMIService.ExecQuery _
("Select * from Win32_PerfFormattedData_PerfOS_Memory") 
Set colComputer = objWMIService.ExecQuery("Select * from Win32_ComputerSystem") 


For Each objComputer in colComputer 
Wscript.Echo "System Name: " & objComputer.Name & vbCr & "Total RAM " & objComputer.TotalPhysicalMemory/(1024*1024)
WriteTextFile.WriteLine  "System Name: " & objComputer.Name & vbtab 
WriteTextFile.WriteLine ""
WriteTextFile.WriteLine  "Total RAM "   &  objComputer.TotalPhysicalMemory/(1024*1024)    & vbtab 
WriteTextFile.WriteLine ""

Next 

For Each entry in perfData 
Wscript.Echo "Available memory bytes: " & entry.AvailableBytes/(1024*1024)
WriteTextFile.WriteLine  "Available Memory Bytes" &  entry.AvailableBytes/(1024*1024) & vbtab
WriteTextFile.WriteLine ""
Next






Dim  strList
Dim colProcesses, sliceProcesses()
Dim objProcess, tempProcess
Dim i, j, iPos, iMax, listLen

strComputer = "."
Set objWMIService = GetObject("winmgmts:{impersonationLevel=impersonate}!\\"  _
                                & strComputer & "\root\cimv2")

Set objRefresher = CreateObject("WbemScripting.SWbemRefresher")
set colProcesses = objRefresher.AddEnum (objWMIService, _
                            "Win32_PerfFormattedData_PerfProc_Process").objectSet

objRefresher.Refresh
WScript.Sleep(1000)
objRefresher.Refresh

Redim Preserve sliceProcesses(0)
i = 0

'strip Idle, Total, and 0 values
for each objProcess in colProcesses
    if ((objProcess.PercentProcessorTime > 0) _
            and (not objProcess.name = "Idle") _
            and (not objProcess.Name = "_Total")) then
        Redim Preserve sliceProcesses(i)
        set sliceProcesses(i) = objProcess
        i = i+1
    end if
next

'Selection Sort, didn't feel like fighting with it to get a slice
for iPos = 0 to UBound(sliceProcesses)
    iMax = iPos
    
    for i = iPos+1 to UBound(sliceProcesses)
        
        if CInt(sliceProcesses(i).PercentProcessorTime) > _
                    CInt(sliceProcesses(iMax).PercentProcessorTime) then
            iMax = i
        end if
    next
    
    if (not iMax = iPos) then
        set tempProcess = sliceProcesses(iPos)
        set sliceProcesses(iPos) = sliceProcesses(iMax)
        set sliceProcesses(iMax) = tempProcess
    end if
next

if UBound(sliceProcesses) > 10 then listLen = 10 else listLen = UBound(sliceProcesses)

'Sad excuse for Array Slice
for i = 0 to listLen
        strList = strList + vbCR & sliceProcesses(i).Name & _
                "    " & sliceProcesses(i).PercentProcessorTime
next
WriteTextFile.WriteLine  strList
WScript.echo strList





Dim objFSO : Set objFSO = CreateObject("Scripting.FileSystemObject")
Dim objSHL : Set objSHL = CreateObject("WScript.Shell")
Dim objMessage, Email, EPass, DroppedFile
Dim strSubject, strTxtBody, strToEmail, strAttach
Dim fso,file

Set fso = CreateObject("Scripting.FileSystemObject" )            
Set file = fso.OpenTextFile("diskspace.txt",1,1) 
Dim str
str=file.ReadAll








 
 Set objMessage = CreateObject("CDO.Message")
 objMessage.Subject = "Test"
 objMessage.From = "sender@gmail.com"
 objMessage.To = "recipient@gmail.com"
 objMessage.TextBody = str
 
	
 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/sendusing") = 2
 
 'Name or IP of Remote SMTP Server
 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/smtpserver") = "smtp.gmail.com"

 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/smtpauthenticate") = 1

 'Your UserID on the SMTP server
 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/sendusername") = "sender@gmail.com"

 'Your password on the SMTP server
 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/sendpassword") = "sender password"

 'Server port (typically 25)
 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/smtpserverport") = "465"

 'Use SSL for the connection (False or True)
 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/smtpusessl") = True

 'Connection Timeout in seconds (the maximum time CDO will try to establish a connection to the SMTP server)
 objMessage.Configuration.Fields.Item _
 ("http://schemas.microsoft.com/cdo/configuration/smtpconnectiontimeout") = 60

 objMessage.Configuration.Fields.Update
 objMessage.Send

 If IsEmpty(strAttach) then
  MsgBox "Message Sent",vbInformation
 Else
  MsgBox "Message Sent" &vbLf&strAttach,vbInformation
 End If


WScript.Quit
